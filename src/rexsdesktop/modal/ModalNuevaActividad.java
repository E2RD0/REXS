/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rexsdesktop.modal;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Map;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import rexsdesktop.CurrentUser;
import rexsdesktop.controller.Activities;
import rexsdesktop.controller.Locations;
import rexsdesktop.view.Admin;

/**
 * Clase que contiene el Panel para agregar una nueva actividad.
 *
 * @author Carlos Herrera
 * @version 1.2
 */
public class ModalNuevaActividad extends javax.swing.JPanel {

    /**
     * Creates new form NewJPanel
     */
    Locations l = new Locations();
    Map<String, Locations.Location> map = l.createMap();
    private SpinnerDateModel modelInicio = new SpinnerDateModel();
    private SpinnerDateModel modelFin = new SpinnerDateModel();
    private JDialog parent;

    public ModalNuevaActividad(JDialog parent) {
        initComponents();
        this.parent = parent;
        String num = "02";
        Calendar min = Calendar.getInstance();
        min.set(Calendar.YEAR, Integer.parseInt(Activities.getMinAnioInicio()));
        min.set(Calendar.MONTH, Integer.parseInt(Activities.getMinMesInicio()) - 1);
        min.set(Calendar.DATE, Integer.parseInt(Activities.getMinDiaInicio()));

        Calendar max = Calendar.getInstance();
        max.set(Calendar.YEAR, Integer.parseInt(Activities.getMinAnioInicio()));
        max.set(Calendar.MONTH, Integer.parseInt(Activities.getMaxMesInicio()) - 1);
        max.set(Calendar.DATE, Integer.parseInt(Activities.getMaxDiaInicio()));

        dateFechaInicio.setMinSelectableDate(min.getTime());
        dateFechaInicio.setMaxSelectableDate(max.getTime());

        cbxUbicacionModal.removeAllItems();
        l.createComboBox(map, cbxUbicacionModal);

        dateFechaInicio.setDateFormatString("yyyy-MM-dd");
        dateFechaInicio.setDate(min.getTime());

        modelInicio.setCalendarField(Calendar.MINUTE);
        modelFin.setCalendarField(Calendar.MINUTE);
        spHoraInicio.setModel(modelInicio);
        spHoraInicio.setEditor(new JSpinner.DateEditor(spHoraInicio, "h:mma"));
        spHoraFin.setModel(modelFin);
        spHoraFin.setEditor(new JSpinner.DateEditor(spHoraFin, "h:mma"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAceptarModal = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        cbxUbicacionModal = new javax.swing.JComboBox<>();
        txtNombreActividadModal = new javax.swing.JTextField();
        jLabel67 = new javax.swing.JLabel();
        dateFechaInicio = new com.toedter.calendar.JDateChooser();
        spHoraInicio = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        spHoraFin = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescripcionModal = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnCancelarModal = new javax.swing.JButton();
        txtNombreEncargadoModal = new javax.swing.JTextField();
        jLabel68 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(345, 400));
        setMinimumSize(new java.awt.Dimension(345, 325));
        setPreferredSize(new java.awt.Dimension(345, 325));

        btnAceptarModal.setBackground(new java.awt.Color(213, 222, 255));
        btnAceptarModal.setFont(new java.awt.Font("Rubik Medium", 0, 11)); // NOI18N
        btnAceptarModal.setForeground(new java.awt.Color(46, 91, 255));
        btnAceptarModal.setText("Aceptar");
        btnAceptarModal.setBorderPainted(false);
        btnAceptarModal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarModalActionPerformed(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(164, 164, 164));

        cbxUbicacionModal.setFont(new java.awt.Font("Rubik", 0, 11)); // NOI18N
        cbxUbicacionModal.setForeground(new java.awt.Color(46, 56, 77));
        cbxUbicacionModal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxUbicacionModal.setToolTipText("Ubicación de la actividad");
        cbxUbicacionModal.setPreferredSize(new java.awt.Dimension(56, 27));

        txtNombreActividadModal.setBackground(new java.awt.Color(249, 250, 255));
        txtNombreActividadModal.setFont(new java.awt.Font("Rubik", 0, 11)); // NOI18N
        txtNombreActividadModal.setForeground(new java.awt.Color(46, 56, 77));
        txtNombreActividadModal.setToolTipText("Nombre de la actividad");
        txtNombreActividadModal.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(224, 231, 255), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 15, 1, 15)));

        jLabel67.setFont(new java.awt.Font("Rubik Medium", 0, 10)); // NOI18N
        jLabel67.setForeground(new java.awt.Color(176, 186, 201));
        jLabel67.setText("NOMBRE DE LA ACTIVIDAD");

        dateFechaInicio.setToolTipText("Fecha de la actividad");
        dateFechaInicio.setDateFormatString("yyyy-MM-dd HH:mm:ss");
        dateFechaInicio.setPreferredSize(new java.awt.Dimension(137, 28));

        spHoraInicio.setToolTipText("Hora inicio de la actividad");

        jLabel1.setFont(new java.awt.Font("Rubik Medium", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("-");

        spHoraFin.setToolTipText("Hora de finalización de la actividad");

        txtDescripcionModal.setColumns(20);
        txtDescripcionModal.setRows(5);
        txtDescripcionModal.setToolTipText("Descripción de la actividad");
        jScrollPane1.setViewportView(txtDescripcionModal);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rexsdesktop/view/resources/LocationActivities.png"))); // NOI18N

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rexsdesktop/view/resources/Clock.png"))); // NOI18N

        btnCancelarModal.setBackground(new java.awt.Color(247, 214, 218));
        btnCancelarModal.setFont(new java.awt.Font("Rubik Medium", 0, 11)); // NOI18N
        btnCancelarModal.setForeground(new java.awt.Color(214, 54, 73));
        btnCancelarModal.setText("Cancelar");
        btnCancelarModal.setBorderPainted(false);
        btnCancelarModal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarModalActionPerformed(evt);
            }
        });

        txtNombreEncargadoModal.setBackground(new java.awt.Color(249, 250, 255));
        txtNombreEncargadoModal.setFont(new java.awt.Font("Rubik", 0, 11)); // NOI18N
        txtNombreEncargadoModal.setForeground(new java.awt.Color(46, 56, 77));
        txtNombreEncargadoModal.setToolTipText("Nombre de la actividad");
        txtNombreEncargadoModal.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(224, 231, 255), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 15, 1, 15)));

        jLabel68.setFont(new java.awt.Font("Rubik Medium", 0, 10)); // NOI18N
        jLabel68.setForeground(new java.awt.Color(176, 186, 201));
        jLabel68.setText("ENCARGADO");

        jLabel69.setFont(new java.awt.Font("Rubik Medium", 0, 10)); // NOI18N
        jLabel69.setForeground(new java.awt.Color(176, 186, 201));
        jLabel69.setText("DESCRIPCIÓN");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombreActividadModal, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel67)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(dateFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(spHoraInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, 0)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, 0)
                                        .addComponent(spHoraFin, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cbxUbicacionModal, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel68)
                                            .addComponent(txtNombreEncargadoModal)))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel69)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAceptarModal, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btnCancelarModal, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel67)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNombreActividadModal, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(spHoraFin, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                        .addComponent(spHoraInicio, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                        .addComponent(dateFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel3))
                .addGap(7, 7, 7)
                .addComponent(jLabel68)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbxUbicacionModal, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtNombreEncargadoModal, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel69)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCancelarModal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAceptarModal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
/**
     * Método utilizado para volver a nulos los valores de los campos de
     * actividad.
     */
    private void resetarCampos() {
        txtDescripcionModal.setText(null);
        txtNombreActividadModal.setText(null);
    }

    /**
     * Método utilizado para ingresar los datos de una nueva actividad
     */
    private void ingresar() {
//        System.out.println("Inicio ="+modelInicio.getDate());
//        System.out.println("Fin ="+modelFin.getDate());

        SimpleDateFormat formato = new SimpleDateFormat("HH:mm:ss");
        String prueba = formato.format(modelInicio.getDate());
        String prueba2 = formato.format(modelFin.getDate());
        String max = "20:00:00";
        String min = "08:00:00";
        try {
            SimpleDateFormat sdf = (SimpleDateFormat) SimpleDateFormat.getDateTimeInstance();
            sdf.applyPattern("HH:mm:ss");
            Date d = null;
            Date d2 = null;
            Date d3 = null;
            Date d4 = null;
            try {
                d = sdf.parse(prueba);
                d2 = sdf.parse(prueba2);
                d3 = sdf.parse(max);
                d4 = sdf.parse(min);

                if (txtDescripcionModal.getText().trim().equals("") || txtNombreActividadModal.getText().trim().equals("") || txtNombreEncargadoModal.getText().trim().equals("")) {
                    JOptionPane.showMessageDialog(null, "Exisen campos vacíos", "Atención", JOptionPane.INFORMATION_MESSAGE);
                } else if (modelFin.getDate().toString().equals(modelInicio.getDate().toString())) {
                    JOptionPane.showMessageDialog(null, "Las horas no deben ser iguales", "Atención", JOptionPane.INFORMATION_MESSAGE);
                } else if (d2.before(d4)) {
                    JOptionPane.showMessageDialog(null, "La hora de finalización no puede ser anterior a las 8:00 a.m.", "Atención", JOptionPane.INFORMATION_MESSAGE);
                } else if (d.before(d4)) {
                    JOptionPane.showMessageDialog(null, "La hora de inicio no puede ser anterior a las 8:00 a.m.", "Atención", JOptionPane.INFORMATION_MESSAGE);
                } else if (d2.after(d3)) {
                    JOptionPane.showMessageDialog(null, "La hora de finalización no puede excederse de las 8:00 p.m", "Atención", JOptionPane.INFORMATION_MESSAGE);
                } else if (d.after(d3)) {
                    JOptionPane.showMessageDialog(null, "La hora de inicio no puede excederse de las 8:00 p.m", "Atención", JOptionPane.INFORMATION_MESSAGE);
                } else if (d2.before(d)) {
                    JOptionPane.showMessageDialog(null, "La hora de finalización no puede ser anterior a la de inicio", "Atención", JOptionPane.INFORMATION_MESSAGE);
                } else if (d.after(d2)) {
                    JOptionPane.showMessageDialog(null, "La hora de inicio no puede ser luego de la de finalización", "Atención", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    String nombre = txtNombreActividadModal.getText();
                    String encargado = txtNombreEncargadoModal.getText();
                    String descripcion = txtDescripcionModal.getText();
                    SimpleDateFormat formatoDia = new SimpleDateFormat("yyyy-MM-dd");
                    SimpleDateFormat formatoHora = new SimpleDateFormat(" HH:mm:ss");
                    String fechaInicio = formatoDia.format(dateFechaInicio.getDate());
                    String dInicio = fechaInicio + formatoHora.format(modelInicio.getDate());
                    String dFin = fechaInicio + formatoHora.format(modelFin.getDate());
                    String ubicacion = (String) cbxUbicacionModal.getSelectedItem();
                    int idUbicacion = Locations.getIdUbicacion(String.valueOf(map.get(ubicacion)));

                    if (Activities.nuevaActividad(nombre, descripcion, dInicio, CurrentUser.getEdicionExpotecnica(), dFin, encargado, idUbicacion)) {
                        JOptionPane.showMessageDialog(null, "Actividad ingresada");
                        resetarCampos();
                        Activities acti = new Activities();
                        Admin.cargarActividades();
                        cerrarDialog();
                    } else {
                        JOptionPane.showMessageDialog(null, "ERROR");
                    }
                }
            } catch (ParseException ex) {
                System.out.println(ex.getMessage());
            }
        } catch (Exception e) {
            System.out.println("Error global" + e.getMessage());
        }
    }


    private void btnAceptarModalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarModalActionPerformed
        ingresar();
    }//GEN-LAST:event_btnAceptarModalActionPerformed

    private void btnCancelarModalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarModalActionPerformed
        cerrarDialog();
    }//GEN-LAST:event_btnCancelarModalActionPerformed
    private void cerrarDialog() {
        parent.setVisible(false);
        parent.dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptarModal;
    private javax.swing.JButton btnCancelarModal;
    private javax.swing.JComboBox<String> cbxUbicacionModal;
    private com.toedter.calendar.JDateChooser dateFechaInicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSpinner spHoraFin;
    private javax.swing.JSpinner spHoraInicio;
    private javax.swing.JTextArea txtDescripcionModal;
    private javax.swing.JTextField txtNombreActividadModal;
    private javax.swing.JTextField txtNombreEncargadoModal;
    // End of variables declaration//GEN-END:variables
}
